#############################################################
###
##  File:   auto_code_msg_hpp_as_rb.awk
##  Desc:   Convert ISE Message *.hpp files into equivalent ruby code
##
##  Usage:
##
##      cd to/place/with/message_headers
##      gawk -f $ISE_ROOT/bin/cm_tools/auto_code_msg_hpp_as_rb.awk *.hpp *.h
##
##  This will create one ruby file for each hpp file
##
##  ASSUMPTION: There is one and only one message defined per header file.
#


#########################################################
BEGIN { FS="[:,()]+"

}

#########################################################
/ITEM\(/ {
    split($0,items,"[, ()]+")

    type_str = items[2]
    gsub("<", "(:", type_str)
    gsub(">", ")", type_str)

    if ( 0 == index(type_str, ":") )
    {
        type_str = ":" type_str
    }

    item_str = ":" items[3]
    gsub(" ", "", item_str)   ## remove spaces
    gsub("\t", "", item_str)   ## remove tabs
     
    print "     item(" type_str ", " item_str ")"  >> filename_rb
    next
}

########################################################
NF < 8 {
#   print NF, "skipping"
    next
}

########################################################
## FIXME: If descrption string contains field delimiters, the correct desc will not be extracted.
{
    for(x=NF;x>0;x--)
    {
        if(chr(34) == substr($x,1,1))
        {
            desc = x
            break
        }
    }
    
    end_desc = desc
    
    for(y=desc+1; y<=NF;y++)
    {
      z=index($y,chr(34))
      if(z>0)
      {
        end_desc = y
        break
      }
    }
}

#######################################################
{
    if (length(filename_rb) > 0)
    {
        print "  end" >> filename_rb
        print "end" >> filename_rb
    }

    split(FILENAME,parts,".")
    msg_name = parts[1]

    filename_rb = msg_name ".rb"
    
#    print "DEBUG desc: " desc " [" $desc "] end_desc: " end_desc " [" $end_desc "]"

    if (desc == end_desc)
    {
      msg_desc = $desc
    }
    else
    {
      msg_desc = $desc
      for(x=desc+1;x<=end_desc;x++)
      {
        msg_desc = msg_desc "," $x
      }
    }

    print "###############################################" > filename_rb
    print "###" >> filename_rb
    print "##   File:   " filename_rb >> filename_rb
    print "##   Desc:   " substr(msg_desc,2,length(msg_desc)-2) >> filename_rb
    print "##" >> filename_rb
    print "##   This file was auto-generated by auto_code_msg_hpp_as_rb" >> filename_rb
    print "#\n" >> filename_rb

    print "require 'IseMessage'\n" >> filename_rb

    print "class " msg_name " < IseMessage" >> filename_rb
    print "  def initialize" >> filename_rb
    print "    super" >> filename_rb
    print "    desc " msg_desc >> filename_rb
}

#############################################################
END {
    print "  end" >> filename_rb
    print "end" >> filename_rb
}

#############################################################
function chr(c)
{
    # force c to be numeric by adding 0
    return sprintf("%c", c + 0)
}

