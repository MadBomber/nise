#########################################################################
###
##	File:	iserelease.awk
##	Desc:	generates the ISERelease.h file that marks a release
##		This AWK script is expected to be involked by a shell script wrapper
##
##	Usage:
##
##		gawk -v URL="svn URL to ISE_ROOT" -f iserelease.awk ChangeLog
##
#

BEGIN {	FS  = " "
	OFS = "\t"

	if (ENVIRON["ISE_ROOT"] == "")
	{
		print "ERROR: ISE_ROOT is undefined."
		exit -1
	}

	if (URL == "")
	{
		print "ERROR: command line varible URL is undefined."
		exit -1
	}

	ISE_ROOT  = ENVIRON["ISE_ROOT"] "/"

	or_marker = "/tags/CM/"		### official release
	rc_marker = "/trunk"		### releaes candidate
	er_marker = "/branches/"	### engineering build

	or_marker_len = length(or_marker)
	rc_marker_len = length(or_marker)
	er_marker_len = length(er_marker)

	official_release = index(URL, or_marker)
	rc_release       = index(URL, rc_marker)
	eng_release      = index(URL, er_marker)

	if (official_release)
	{
		x = official_release + or_marker_len
		new_cm_tag = substr(URL,x)
	}
	else
{

	repo_url  = "svn://queen/ISE/tags/CM"
	filename  = "ISERelease.h"
	temp_dir  = "/tmp/"
	dest_dir  = ISE_ROOT "Common/"

	tmp_filename  = temp_dir filename
	dest_filename = dest_dir filename

################################################################################
## Get list of official releases; but, only care about the last one in the list.

	cmd  = "svn list " repo_url " | tail -1 > " tmp_filename

	cmd_result = system(cmd)

	if (cmd_result == 0)
	{
		getline < tmp_filename
		last_cm_tag = $0
		x = index(last_cm_tag, ".")
		y = 1 + substr(last_cm_tag, x+1, length(last_cm_tag)-1)
		new_cm_tag = substr(last_cm_tag, 1, x) y

	}
	else
	{
		print "ERROR: " cmd " returned: " cmd_result
		exit -1
	}

	if ( rc_release )
	{
		new_cm_tag = new_cm_tag "rc"
	}

	if ( eng_release )
	{
		new_cm_tag = new_cm_tag substr(URL, eng_release) 
	}
}

#############################################################
## At this point new_cm_tag has been successfully constructed

	marker   = toupper(filename)
	gsub("\\.", "_", marker)

	print "/*" > dest_filename
	print " *	File:	" filename > dest_filename
	print " *	Desc:	Marks the release" > dest_filename
	print " *		This file is automatically generated." > dest_filename
	print " *" > dest_filename

}

{	### Add changelog to file header comments

	print " * " $0 > dest_filename

}

END {

if (dest_filename != "")
{
	print " * " > dest_filename
	print " */\n\n" > dest_filename

	print "#ifndef " marker > dest_filename
	print "#define " marker "\n" > dest_filename
	print "#define ISE_RELEASE \"$S" "tate: " new_cm_tag " $\"\n" > dest_filename
	print "const char gcISERELEASE[] = ISE_RELEASE;\n" > dest_filename
	print "#endif" > dest_filename

	close(dest_filename)
}

	system("rm -fr " tmp_filename)

}


