#include "Traj3DOF_Msg.h"


/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
// CTraj3DOFMsg_LoadInput
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// CTraj3DOFMsg_LoadInput construction/destruction
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_LoadInput::CTraj3DOFMsg_LoadInput() : CBaseMsg(SM_LoadInput,std::string("T3DOF_LoadInput"),std::string("Traj3DOF Load Remote Input"))
{
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_LoadInput::CTraj3DOFMsg_LoadInput(const CTraj3DOFMsg_LoadInput& msg) : CBaseMsg()
{
	Copy(msg);
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_LoadInput::~CTraj3DOFMsg_LoadInput()
{
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTraj3DOFMsg_LoadInput::Copy(const CTraj3DOFMsg_LoadInput& msg)
{
	CBaseMsg::Copy(msg);
	m_csFile=msg.m_csFile;
}

/////////////////////////////////////////////////////////////////////////////
//		Assignment (overloaded operator =)
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_LoadInput& CTraj3DOFMsg_LoadInput::operator=(const CTraj3DOFMsg_LoadInput& msg)
{
	Copy(msg);
	return *this;
}


/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
// CTraj3DOFMsg_RemoteSetup
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// CTraj3DOFMsg_RemoteSetup construction/destruction
//////////////////////////////////////////////////////////file:///usr/share/doc/HTML/index.html///////////////////
CTraj3DOFMsg_RemoteSetup::CTraj3DOFMsg_RemoteSetup() : 
	CBaseMsg(SM_RemoteSetup,std::string("T3DOF_RemoteSetup"),std::string("Traj3DOF Remote Setup"))
{
	m_iMissileID=0;
	m_iUnits=2;
	m_iFrame=3;
	m_dTime0=0.0;
	m_dTimeFinal=1000.0;
	m_iOpt=0;
	for(int i=0;i<3;i++)
	{
		m_dPosLaunch[i]=0.0;
		m_dPosImpact[i]=0.0;
	}
	m_dRange=0.0;
	m_dHeading=0.0;
	m_bLoft=false;
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_RemoteSetup::CTraj3DOFMsg_RemoteSetup(const CTraj3DOFMsg_RemoteSetup& msg) : CBaseMsg()
{
	Copy(msg);
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_RemoteSetup::~CTraj3DOFMsg_RemoteSetup()
{
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTraj3DOFMsg_RemoteSetup::Copy(const CTraj3DOFMsg_RemoteSetup& msg)
{
	CBaseMsg::Copy(msg);
	m_iMissileID=msg.m_iMissileID;
	m_iUnits=msg.m_iUnits;
	m_iFrame=msg.m_iFrame;
	m_dTime0=msg.m_dTime0;
	m_dTimeFinal=msg.m_dTimeFinal;
	m_iOpt=msg.m_iOpt;
	for(int i=0;i<3;i++)
	{
		m_dPosLaunch[i]=msg.m_dPosLaunch[i];
		m_dPosImpact[i]=msg.m_dPosImpact[i];
	}
	m_dRange=msg.m_dRange;
	m_dHeading=msg.m_dHeading;
	m_bLoft=msg.m_bLoft;
}

/////////////////////////////////////////////////////////////////////////////
//		Assignment (overloaded operator =)
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_RemoteSetup& CTraj3DOFMsg_RemoteSetup::operator=(const CTraj3DOFMsg_RemoteSetup& msg)
{
	Copy(msg);
	return *this;
}


/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
// CTraj3DOFMsg_TimeGrant
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// CTraj3DOFMsg_TimeGrant construction/destruction
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_TimeGrant::CTraj3DOFMsg_TimeGrant() : 
	CBaseMsg(SM_TimeGrant,std::string("T3DOF_TimeGrant"),std::string("Traj3DOF Time Grant"))
{
	m_dTimeGrant=0.0;
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_TimeGrant::CTraj3DOFMsg_TimeGrant(const CTraj3DOFMsg_TimeGrant& msg) : CBaseMsg()
{
	Copy(msg);
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_TimeGrant::~CTraj3DOFMsg_TimeGrant()
{
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTraj3DOFMsg_TimeGrant::Copy(const CTraj3DOFMsg_TimeGrant& msg)
{
	CBaseMsg::Copy(msg);
	m_dTimeGrant=msg.m_dTimeGrant;
}

/////////////////////////////////////////////////////////////////////////////
//		Assignment (overloaded operator =)
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_TimeGrant& CTraj3DOFMsg_TimeGrant::operator=(const CTraj3DOFMsg_TimeGrant& msg)
{
	Copy(msg);
	return *this;
}


/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
// CTraj3DOFMsg_TargetStates
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
// CTraj3DOFMsg_TargetStates construction/destruction
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_TargetStates::CTraj3DOFMsg_TargetStates()  : 
	CBaseMsg(SM_TargetStates,std::string("T3DOF_TargetStates"),std::string("Traj3DOF Report Target States"))
{
	m_SFrame=UNK;
	m_SUnits=MET;
	m_dTime=0.0;
	for(int i=0;i<9;i++)
		m_dStates[i]=0.0;
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_TargetStates::CTraj3DOFMsg_TargetStates(const CTraj3DOFMsg_TargetStates& msg)  : CBaseMsg()
{
	Copy(msg);
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_TargetStates::~CTraj3DOFMsg_TargetStates()
{
}

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////
void CTraj3DOFMsg_TargetStates::Copy(const CTraj3DOFMsg_TargetStates& msg)
{
	CBaseMsg::Copy(msg);
	m_SFrame=msg.m_SFrame;
	m_SUnits=msg.m_SUnits;
	m_dTime=msg.m_dTime;
	for(int i=0;i<9;i++)
		m_dStates[i]=msg.m_dStates[i];
}

/////////////////////////////////////////////////////////////////////////////
//		Assignment (overloaded operator =)
/////////////////////////////////////////////////////////////////////////////
CTraj3DOFMsg_TargetStates& CTraj3DOFMsg_TargetStates::operator=(const CTraj3DOFMsg_TargetStates& msg)
{
	Copy(msg);
	return *this;
}
