////////////////////////////////////////////////////////////////////////////////
//
// Filename:         Ned.hpp
//
// Classification:   UNCLASSIFIED
//
// Unit Name:        Utilities
//
// System Name:      Simulation
//
// Description:      This file contains the class definition of Ned.
//
// Author:           Hector Bayona
//                   Nancy Anderson
//
// Company Name:     Lockheed Martin
//                   Missiles & Fire Control
//                   Dallas, TX
//
// Revision History:
//
// <yyyymmdd> <Eng> <Desciption of modification>
//  20051114   HLB   Originial Release
//
////////////////////////////////////////////////////////////////////////////////

#ifndef _NED_HPP
#define _NED_HPP

#include "ISEExport.h"
#include "Vec3.hpp"

namespace SamsonMath {

/// Ned Class.

/// This class is derived from the Vec3 class
/// and has arguments North, East, and Down.

class ISE_Export Ned : public Vec3<double>
{
   private:

   public:

////////////////////////////////////////////////////////////////////////////////
//  Procedure:    Ned
/// Description:  The constructor for this class.
//  Inputs:       aRhs
//  Output:       None
////////////////////////////////////////////////////////////////////////////////

      Ned (const Vec3<double> & aRhs);

////////////////////////////////////////////////////////////////////////////////
//  Procedure:    Ned
/// Description:  The constructor for this class that initializes the arguments.
//  Inputs:       aNorth
//                aEast
//                aDown
//  Outputs:      None
////////////////////////////////////////////////////////////////////////////////

      Ned (double aNorth = 0.0, double aEast = 0.0, double aDown = 0.0);

////////////////////////////////////////////////////////////////////////////////
//  Procedure:    getNorth
/// Description:  This function gets the North argument.
////////////////////////////////////////////////////////////////////////////////

      inline double getNorth (void) const;

////////////////////////////////////////////////////////////////////////////////
//  Procedure:    setNorth
/// Description:  This function sets the North argument.
//  Inputs:       aNorth
//  Output:       none
////////////////////////////////////////////////////////////////////////////////

      inline void setNorth (const double aNorth);

////////////////////////////////////////////////////////////////////////////////
//  Procedure:    getEast
/// Description:  This function gets the East argument.
////////////////////////////////////////////////////////////////////////////////

      inline double getEast (void) const;

////////////////////////////////////////////////////////////////////////////////
//  Procedure:    setEast
/// Description:  This function sets the East argument.
//  Inputs:       aEast
//  Output:       none
////////////////////////////////////////////////////////////////////////////////

      inline void setEast (const double aEast);

////////////////////////////////////////////////////////////////////////////////
//  Procedure:    getDown
/// Description:  This function gets the Down argument.
////////////////////////////////////////////////////////////////////////////////

      inline double getDown (void) const;

////////////////////////////////////////////////////////////////////////////////
//  Procedure:    setDown
/// Description:  This function sets the Down argument.
//  Inputs:       aDown
//  Output:       none
////////////////////////////////////////////////////////////////////////////////

      inline void setDown (const double aDown);

////////////////////////////////////////////////////////////////////////////////
// Procedure:    ~Ned
// Description:  This is the destructor for the Ned class.
////////////////////////////////////////////////////////////////////////////////

      ~Ned ();
};


}; // namespace

#include "Ned.ipp"
#endif


